// Copyright (c) Jeremy W. Kuhne. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

using System.IO.Compression;

namespace Tests.Shared.Support.Resources;

public static class TestFiles
{
    private static readonly byte[] s_cursorData =
    {
            0xb5, 0xcb, 0x31, 0x0e, 0x40, 0x40, 0x10, 0x46, 0xe1, 0xb7, 0x22, 0x11, 0x15, 0x95, 0x96, 0x52,
            0xe9, 0x08, 0x6e, 0xc6, 0xd1, 0xf6, 0x28, 0x8e, 0xa0, 0x24, 0x11, 0xbf, 0xd9, 0xd8, 0x84, 0x0a,
            0x8d, 0x37, 0xf9, 0x9a, 0x99, 0x0c, 0x24, 0x38, 0x9a, 0x06, 0x4a, 0x72, 0x3a, 0x07, 0x15, 0xd0,
            0x1a, 0x5b, 0xd1, 0x1b, 0x67, 0x13, 0x1a, 0xb9, 0x4a, 0xa2, 0x90, 0x24, 0x7e, 0x2f, 0x7d, 0x3e,
            0xeb, 0x4b, 0x73, 0x26, 0x4d, 0xee, 0xe4, 0xa3, 0xf1, 0x06, 0xbb, 0xfb, 0x42, 0xda, 0x6b, 0x69,
            0x1b, 0xa4, 0xc5, 0x7e, 0xd6, 0xe8, 0xa5, 0x03
        };

    private static Stream GetUncompressedStream(byte[] compressedData)
    {
        return new DeflateStream(new MemoryStream(compressedData, writable: false), CompressionMode.Decompress);
    }

    public static Stream GetTestCursor() => GetUncompressedStream(s_cursorData);
}

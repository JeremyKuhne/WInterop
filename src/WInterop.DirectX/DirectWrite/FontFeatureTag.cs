// ------------------------
//    WInterop Framework
// ------------------------

// Copyright (c) Jeremy W. Kuhne. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

namespace WInterop.DirectWrite
{
    /// <summary>
    /// Typographic feature of text supplied by the font. [DWRITE_FONT_FEATURE_TAG]
    /// </summary>
    public enum FontFeatureTag : uint
    {
        AlternativeFractions                = ((byte)'a' << 24) | ((byte)'f' << 16) | ((byte)'r' << 8) | ((byte)'c'),
        PetiteCapitalsFromCapitals          = ((byte)'c' << 24) | ((byte)'2' << 16) | ((byte)'p' << 8) | ((byte)'c'),
        SmallCapitalsFromCapitals           = ((byte)'c' << 24) | ((byte)'2' << 16) | ((byte)'s' << 8) | ((byte)'c'),
        ContextualAlternates                = ((byte)'c' << 24) | ((byte)'a' << 16) | ((byte)'l' << 8) | ((byte)'t'),
        CaseSensitiveForms                  = ((byte)'c' << 24) | ((byte)'a' << 16) | ((byte)'s' << 8) | ((byte)'e'),
        GlyphCompositionDecomposition       = ((byte)'c' << 24) | ((byte)'c' << 16) | ((byte)'m' << 8) | ((byte)'p'),
        ContextualLigatures                 = ((byte)'c' << 24) | ((byte)'l' << 16) | ((byte)'i' << 8) | ((byte)'g'),
        CapitalSpacing                      = ((byte)'c' << 24) | ((byte)'p' << 16) | ((byte)'s' << 8) | ((byte)'p'),
        ContextualSwash                     = ((byte)'c' << 24) | ((byte)'s' << 16) | ((byte)'w' << 8) | ((byte)'h'),
        CursivePositioning                  = ((byte)'c' << 24) | ((byte)'u' << 16) | ((byte)'r' << 8) | ((byte)'s'),
        Default                             = ((byte)'d' << 24) | ((byte)'f' << 16) | ((byte)'l' << 8) | ((byte)'t'),
        DiscretionaryLigatures              = ((byte)'d' << 24) | ((byte)'l' << 16) | ((byte)'i' << 8) | ((byte)'g'),
        ExpertForms                         = ((byte)'e' << 24) | ((byte)'x' << 16) | ((byte)'p' << 8) | ((byte)'t'),
        Fractions                           = ((byte)'f' << 24) | ((byte)'r' << 16) | ((byte)'a' << 8) | ((byte)'c'),
        FullWidth                           = ((byte)'f' << 24) | ((byte)'w' << 16) | ((byte)'i' << 8) | ((byte)'d'),
        HalfForms                           = ((byte)'h' << 24) | ((byte)'a' << 16) | ((byte)'l' << 8) | ((byte)'f'),
        HalantForms                         = ((byte)'h' << 24) | ((byte)'a' << 16) | ((byte)'l' << 8) | ((byte)'n'),
        AlternateHalfWidth                  = ((byte)'h' << 24) | ((byte)'a' << 16) | ((byte)'l' << 8) | ((byte)'t'),
        HistoricalForms                     = ((byte)'h' << 24) | ((byte)'i' << 16) | ((byte)'s' << 8) | ((byte)'t'),
        HorizontalKanaAlternates            = ((byte)'h' << 24) | ((byte)'k' << 16) | ((byte)'n' << 8) | ((byte)'a'),
        HistoricalLigatures                 = ((byte)'h' << 24) | ((byte)'l' << 16) | ((byte)'i' << 8) | ((byte)'g'),
        HalfWidth                           = ((byte)'h' << 24) | ((byte)'w' << 16) | ((byte)'i' << 8) | ((byte)'d'),
        HojoKanjiForms                      = ((byte)'h' << 24) | ((byte)'o' << 16) | ((byte)'j' << 8) | ((byte)'o'),
        Jis04Forms                          = ((byte)'j' << 24) | ((byte)'p' << 16) | ((byte)'0' << 8) | ((byte)'4'),
        Jis78Forms                          = ((byte)'j' << 24) | ((byte)'p' << 16) | ((byte)'7' << 8) | ((byte)'8'),
        Jis83Forms                          = ((byte)'j' << 24) | ((byte)'p' << 16) | ((byte)'8' << 8) | ((byte)'3'),
        Jis90Forms                          = ((byte)'j' << 24) | ((byte)'p' << 16) | ((byte)'9' << 8) | ((byte)'0'),
        Kerning                             = ((byte)'k' << 24) | ((byte)'e' << 16) | ((byte)'r' << 8) | ((byte)'n'),
        StandardLigatures                   = ((byte)'l' << 24) | ((byte)'i' << 16) | ((byte)'g' << 8) | ((byte)'a'),
        LiningFigures                       = ((byte)'l' << 24) | ((byte)'n' << 16) | ((byte)'u' << 8) | ((byte)'m'),
        LocalizedForms                      = ((byte)'l' << 24) | ((byte)'o' << 16) | ((byte)'c' << 8) | ((byte)'l'),
        MarkPositioning                     = ((byte)'m' << 24) | ((byte)'a' << 16) | ((byte)'r' << 8) | ((byte)'k'),
        MathematicalGreek                   = ((byte)'m' << 24) | ((byte)'g' << 16) | ((byte)'r' << 8) | ((byte)'k'),
        MarkToMarkPositioning               = ((byte)'m' << 24) | ((byte)'k' << 16) | ((byte)'m' << 8) | ((byte)'k'),
        AlternateAnnotationForms            = ((byte)'n' << 24) | ((byte)'a' << 16) | ((byte)'l' << 8) | ((byte)'t'),
        NlcKanjiForms                       = ((byte)'n' << 24) | ((byte)'l' << 16) | ((byte)'c' << 8) | ((byte)'k'),
        OldStyleFigures                     = ((byte)'o' << 24) | ((byte)'n' << 16) | ((byte)'u' << 8) | ((byte)'m'),
        Ordinals                            = ((byte)'o' << 24) | ((byte)'r' << 16) | ((byte)'d' << 8) | ((byte)'n'),
        ProportionalAlternateWidth          = ((byte)'p' << 24) | ((byte)'a' << 16) | ((byte)'l' << 8) | ((byte)'t'),
        PetiteCapitals                      = ((byte)'p' << 24) | ((byte)'c' << 16) | ((byte)'a' << 8) | ((byte)'p'),
        ProportionalFigures                 = ((byte)'p' << 24) | ((byte)'n' << 16) | ((byte)'u' << 8) | ((byte)'m'),
        ProportionalWidths                  = ((byte)'p' << 24) | ((byte)'w' << 16) | ((byte)'i' << 8) | ((byte)'d'),
        QuarterWidths                       = ((byte)'q' << 24) | ((byte)'w' << 16) | ((byte)'i' << 8) | ((byte)'d'),
        RequiredLigatures                   = ((byte)'r' << 24) | ((byte)'l' << 16) | ((byte)'i' << 8) | ((byte)'g'),
        RubyNotationForms                   = ((byte)'r' << 24) | ((byte)'u' << 16) | ((byte)'b' << 8) | ((byte)'y'),
        StylisticAlternates                 = ((byte)'s' << 24) | ((byte)'a' << 16) | ((byte)'l' << 8) | ((byte)'t'),
        ScientificInferiors                 = ((byte)'s' << 24) | ((byte)'i' << 16) | ((byte)'n' << 8) | ((byte)'f'),
        SmallCapitals                       = ((byte)'s' << 24) | ((byte)'m' << 16) | ((byte)'c' << 8) | ((byte)'p'),
        SimplifiedForms                     = ((byte)'s' << 24) | ((byte)'m' << 16) | ((byte)'p' << 8) | ((byte)'l'),
        StylisticSet1                       = ((byte)'s' << 24) | ((byte)'s' << 16) | ((byte)'0' << 8) | ((byte)'1'),
        StylisticSet2                       = ((byte)'s' << 24) | ((byte)'s' << 16) | ((byte)'0' << 8) | ((byte)'2'),
        StylisticSet3                       = ((byte)'s' << 24) | ((byte)'s' << 16) | ((byte)'0' << 8) | ((byte)'3'),
        StylisticSet4                       = ((byte)'s' << 24) | ((byte)'s' << 16) | ((byte)'0' << 8) | ((byte)'4'),
        StylisticSet5                       = ((byte)'s' << 24) | ((byte)'s' << 16) | ((byte)'0' << 8) | ((byte)'5'),
        StylisticSet6                       = ((byte)'s' << 24) | ((byte)'s' << 16) | ((byte)'0' << 8) | ((byte)'6'),
        StylisticSet7                       = ((byte)'s' << 24) | ((byte)'s' << 16) | ((byte)'0' << 8) | ((byte)'7'),
        StylisticSet8                       = ((byte)'s' << 24) | ((byte)'s' << 16) | ((byte)'0' << 8) | ((byte)'8'),
        StylisticSet9                       = ((byte)'s' << 24) | ((byte)'s' << 16) | ((byte)'0' << 8) | ((byte)'9'),
        StylisticSet10                      = ((byte)'s' << 24) | ((byte)'s' << 16) | ((byte)'1' << 8) | ((byte)'0'),
        StylisticSet11                      = ((byte)'s' << 24) | ((byte)'s' << 16) | ((byte)'1' << 8) | ((byte)'1'),
        StylisticSet12                      = ((byte)'s' << 24) | ((byte)'s' << 16) | ((byte)'1' << 8) | ((byte)'2'),
        StylisticSet13                      = ((byte)'s' << 24) | ((byte)'s' << 16) | ((byte)'1' << 8) | ((byte)'3'),
        StylisticSet14                      = ((byte)'s' << 24) | ((byte)'s' << 16) | ((byte)'1' << 8) | ((byte)'4'),
        StylisticSet15                      = ((byte)'s' << 24) | ((byte)'s' << 16) | ((byte)'1' << 8) | ((byte)'5'),
        StylisticSet16                      = ((byte)'s' << 24) | ((byte)'s' << 16) | ((byte)'1' << 8) | ((byte)'6'),
        StylisticSet17                      = ((byte)'s' << 24) | ((byte)'s' << 16) | ((byte)'1' << 8) | ((byte)'7'),
        StylisticSet18                      = ((byte)'s' << 24) | ((byte)'s' << 16) | ((byte)'1' << 8) | ((byte)'8'),
        StylisticSet19                      = ((byte)'s' << 24) | ((byte)'s' << 16) | ((byte)'1' << 8) | ((byte)'9'),
        StylisticSet20                      = ((byte)'s' << 24) | ((byte)'s' << 16) | ((byte)'2' << 8) | ((byte)'0'),
        Subscript                           = ((byte)'s' << 24) | ((byte)'u' << 16) | ((byte)'b' << 8) | ((byte)'s'),
        Superscript                         = ((byte)'s' << 24) | ((byte)'u' << 16) | ((byte)'p' << 8) | ((byte)'s'),
        Swash                               = ((byte)'s' << 24) | ((byte)'w' << 16) | ((byte)'s' << 8) | ((byte)'h'),
        Titling                             = ((byte)'t' << 24) | ((byte)'i' << 16) | ((byte)'t' << 8) | ((byte)'l'),
        TraditionalNameForms                = ((byte)'t' << 24) | ((byte)'n' << 16) | ((byte)'a' << 8) | ((byte)'m'),
        TabularFigures                      = ((byte)'t' << 24) | ((byte)'n' << 16) | ((byte)'u' << 8) | ((byte)'m'),
        TraditionalForms                    = ((byte)'t' << 24) | ((byte)'r' << 16) | ((byte)'a' << 8) | ((byte)'d'),
        ThirdWidths                         = ((byte)'t' << 24) | ((byte)'w' << 16) | ((byte)'i' << 8) | ((byte)'d'),
        Unicase                             = ((byte)'u' << 24) | ((byte)'n' << 16) | ((byte)'i' << 8) | ((byte)'c'),
        VerticalWriting                     = ((byte)'v' << 24) | ((byte)'e' << 16) | ((byte)'r' << 8) | ((byte)'t'),
        VerticalAlternatesAndRotation       = ((byte)'v' << 24) | ((byte)'r' << 16) | ((byte)'t' << 8) | ((byte)'2'),
        SlashedZero                         = ((byte)'z' << 24) | ((byte)'e' << 16) | ((byte)'r' << 8) | ((byte)'o'),
    }
}

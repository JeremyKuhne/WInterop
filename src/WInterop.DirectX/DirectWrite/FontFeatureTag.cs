// Copyright (c) Jeremy W. Kuhne. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

namespace WInterop.DirectWrite
{
    /// <summary>
    ///  Typographic feature of text supplied by the font. [DWRITE_FONT_FEATURE_TAG]
    /// </summary>
    public enum FontFeatureTag : uint
    {
        AlternativeFractions                = ((byte)'a') | ((byte)'f' << 8) | ((byte)'r' << 16) | ((byte)'c' << 24),
        PetiteCapitalsFromCapitals          = ((byte)'c') | ((byte)'2' << 8) | ((byte)'p' << 16) | ((byte)'c' << 24),
        SmallCapitalsFromCapitals           = ((byte)'c') | ((byte)'2' << 8) | ((byte)'s' << 16) | ((byte)'c' << 24),
        ContextualAlternates                = ((byte)'c') | ((byte)'a' << 8) | ((byte)'l' << 16) | ((byte)'t' << 24),
        CaseSensitiveForms                  = ((byte)'c') | ((byte)'a' << 8) | ((byte)'s' << 16) | ((byte)'e' << 24),
        GlyphCompositionDecomposition       = ((byte)'c') | ((byte)'c' << 8) | ((byte)'m' << 16) | ((byte)'p' << 24),
        ContextualLigatures                 = ((byte)'c') | ((byte)'l' << 8) | ((byte)'i' << 16) | ((byte)'g' << 24),
        CapitalSpacing                      = ((byte)'c') | ((byte)'p' << 8) | ((byte)'s' << 16) | ((byte)'p' << 24),
        ContextualSwash                     = ((byte)'c') | ((byte)'s' << 8) | ((byte)'w' << 16) | ((byte)'h' << 24),
        CursivePositioning                  = ((byte)'c') | ((byte)'u' << 8) | ((byte)'r' << 16) | ((byte)'s' << 24),
        Default                             = ((byte)'d') | ((byte)'f' << 8) | ((byte)'l' << 16) | ((byte)'t' << 24),
        DiscretionaryLigatures              = ((byte)'d') | ((byte)'l' << 8) | ((byte)'i' << 16) | ((byte)'g' << 24),
        ExpertForms                         = ((byte)'e') | ((byte)'x' << 8) | ((byte)'p' << 16) | ((byte)'t' << 24),
        Fractions                           = ((byte)'f') | ((byte)'r' << 8) | ((byte)'a' << 16) | ((byte)'c' << 24),
        FullWidth                           = ((byte)'f') | ((byte)'w' << 8) | ((byte)'i' << 16) | ((byte)'d' << 24),
        HalfForms                           = ((byte)'h') | ((byte)'a' << 8) | ((byte)'l' << 16) | ((byte)'f' << 24),
        HalantForms                         = ((byte)'h') | ((byte)'a' << 8) | ((byte)'l' << 16) | ((byte)'n' << 24),
        AlternateHalfWidth                  = ((byte)'h') | ((byte)'a' << 8) | ((byte)'l' << 16) | ((byte)'t' << 24),
        HistoricalForms                     = ((byte)'h') | ((byte)'i' << 8) | ((byte)'s' << 16) | ((byte)'t' << 24),
        HorizontalKanaAlternates            = ((byte)'h') | ((byte)'k' << 8) | ((byte)'n' << 16) | ((byte)'a' << 24),
        HistoricalLigatures                 = ((byte)'h') | ((byte)'l' << 8) | ((byte)'i' << 16) | ((byte)'g' << 24),
        HalfWidth                           = ((byte)'h') | ((byte)'w' << 8) | ((byte)'i' << 16) | ((byte)'d' << 24),
        HojoKanjiForms                      = ((byte)'h') | ((byte)'o' << 8) | ((byte)'j' << 16) | ((byte)'o' << 24),
        Jis04Forms                          = ((byte)'j') | ((byte)'p' << 8) | ((byte)'0' << 16) | ((byte)'4' << 24),
        Jis78Forms                          = ((byte)'j') | ((byte)'p' << 8) | ((byte)'7' << 16) | ((byte)'8' << 24),
        Jis83Forms                          = ((byte)'j') | ((byte)'p' << 8) | ((byte)'8' << 16) | ((byte)'3' << 24),
        Jis90Forms                          = ((byte)'j') | ((byte)'p' << 8) | ((byte)'9' << 16) | ((byte)'0' << 24),
        Kerning                             = ((byte)'k') | ((byte)'e' << 8) | ((byte)'r' << 16) | ((byte)'n' << 24),
        StandardLigatures                   = ((byte)'l') | ((byte)'i' << 8) | ((byte)'g' << 16) | ((byte)'a' << 24),
        LiningFigures                       = ((byte)'l') | ((byte)'n' << 8) | ((byte)'u' << 16) | ((byte)'m' << 24),
        LocalizedForms                      = ((byte)'l') | ((byte)'o' << 8) | ((byte)'c' << 16) | ((byte)'l' << 24),
        MarkPositioning                     = ((byte)'m') | ((byte)'a' << 8) | ((byte)'r' << 16) | ((byte)'k' << 24),
        MathematicalGreek                   = ((byte)'m') | ((byte)'g' << 8) | ((byte)'r' << 16) | ((byte)'k' << 24),
        MarkToMarkPositioning               = ((byte)'m') | ((byte)'k' << 8) | ((byte)'m' << 16) | ((byte)'k' << 24),
        AlternateAnnotationForms            = ((byte)'n') | ((byte)'a' << 8) | ((byte)'l' << 16) | ((byte)'t' << 24),
        NlcKanjiForms                       = ((byte)'n') | ((byte)'l' << 8) | ((byte)'c' << 16) | ((byte)'k' << 24),
        OldStyleFigures                     = ((byte)'o') | ((byte)'n' << 8) | ((byte)'u' << 16) | ((byte)'m' << 24),
        Ordinals                            = ((byte)'o') | ((byte)'r' << 8) | ((byte)'d' << 16) | ((byte)'n' << 24),
        ProportionalAlternateWidth          = ((byte)'p') | ((byte)'a' << 8) | ((byte)'l' << 16) | ((byte)'t' << 24),
        PetiteCapitals                      = ((byte)'p') | ((byte)'c' << 8) | ((byte)'a' << 16) | ((byte)'p' << 24),
        ProportionalFigures                 = ((byte)'p') | ((byte)'n' << 8) | ((byte)'u' << 16) | ((byte)'m' << 24),
        ProportionalWidths                  = ((byte)'p') | ((byte)'w' << 8) | ((byte)'i' << 16) | ((byte)'d' << 24),
        QuarterWidths                       = ((byte)'q') | ((byte)'w' << 8) | ((byte)'i' << 16) | ((byte)'d' << 24),
        RequiredLigatures                   = ((byte)'r') | ((byte)'l' << 8) | ((byte)'i' << 16) | ((byte)'g' << 24),
        RubyNotationForms                   = ((byte)'r') | ((byte)'u' << 8) | ((byte)'b' << 16) | ((byte)'y' << 24),
        StylisticAlternates                 = ((byte)'s') | ((byte)'a' << 8) | ((byte)'l' << 16) | ((byte)'t' << 24),
        ScientificInferiors                 = ((byte)'s') | ((byte)'i' << 8) | ((byte)'n' << 16) | ((byte)'f' << 24),
        SmallCapitals                       = ((byte)'s') | ((byte)'m' << 8) | ((byte)'c' << 16) | ((byte)'p' << 24),
        SimplifiedForms                     = ((byte)'s') | ((byte)'m' << 8) | ((byte)'p' << 16) | ((byte)'l' << 24),
        StylisticSet1                       = ((byte)'s') | ((byte)'s' << 8) | ((byte)'0' << 16) | ((byte)'1' << 24),
        StylisticSet2                       = ((byte)'s') | ((byte)'s' << 8) | ((byte)'0' << 16) | ((byte)'2' << 24),
        StylisticSet3                       = ((byte)'s') | ((byte)'s' << 8) | ((byte)'0' << 16) | ((byte)'3' << 24),
        StylisticSet4                       = ((byte)'s') | ((byte)'s' << 8) | ((byte)'0' << 16) | ((byte)'4' << 24),
        StylisticSet5                       = ((byte)'s') | ((byte)'s' << 8) | ((byte)'0' << 16) | ((byte)'5' << 24),
        StylisticSet6                       = ((byte)'s') | ((byte)'s' << 8) | ((byte)'0' << 16) | ((byte)'6' << 24),
        StylisticSet7                       = ((byte)'s') | ((byte)'s' << 8) | ((byte)'0' << 16) | ((byte)'7' << 24),
        StylisticSet8                       = ((byte)'s') | ((byte)'s' << 8) | ((byte)'0' << 16) | ((byte)'8' << 24),
        StylisticSet9                       = ((byte)'s') | ((byte)'s' << 8) | ((byte)'0' << 16) | ((byte)'9' << 24),
        StylisticSet10                      = ((byte)'s') | ((byte)'s' << 8) | ((byte)'1' << 16) | ((byte)'0' << 24),
        StylisticSet11                      = ((byte)'s') | ((byte)'s' << 8) | ((byte)'1' << 16) | ((byte)'1' << 24),
        StylisticSet12                      = ((byte)'s') | ((byte)'s' << 8) | ((byte)'1' << 16) | ((byte)'2' << 24),
        StylisticSet13                      = ((byte)'s') | ((byte)'s' << 8) | ((byte)'1' << 16) | ((byte)'3' << 24),
        StylisticSet14                      = ((byte)'s') | ((byte)'s' << 8) | ((byte)'1' << 16) | ((byte)'4' << 24),
        StylisticSet15                      = ((byte)'s') | ((byte)'s' << 8) | ((byte)'1' << 16) | ((byte)'5' << 24),
        StylisticSet16                      = ((byte)'s') | ((byte)'s' << 8) | ((byte)'1' << 16) | ((byte)'6' << 24),
        StylisticSet17                      = ((byte)'s') | ((byte)'s' << 8) | ((byte)'1' << 16) | ((byte)'7' << 24),
        StylisticSet18                      = ((byte)'s') | ((byte)'s' << 8) | ((byte)'1' << 16) | ((byte)'8' << 24),
        StylisticSet19                      = ((byte)'s') | ((byte)'s' << 8) | ((byte)'1' << 16) | ((byte)'9' << 24),
        StylisticSet20                      = ((byte)'s') | ((byte)'s' << 8) | ((byte)'2' << 16) | ((byte)'0' << 24),
        Subscript                           = ((byte)'s') | ((byte)'u' << 8) | ((byte)'b' << 16) | ((byte)'s' << 24),
        Superscript                         = ((byte)'s') | ((byte)'u' << 8) | ((byte)'p' << 16) | ((byte)'s' << 24),
        Swash                               = ((byte)'s') | ((byte)'w' << 8) | ((byte)'s' << 16) | ((byte)'h' << 24),
        Titling                             = ((byte)'t') | ((byte)'i' << 8) | ((byte)'t' << 16) | ((byte)'l' << 24),
        TraditionalNameForms                = ((byte)'t') | ((byte)'n' << 8) | ((byte)'a' << 16) | ((byte)'m' << 24),
        TabularFigures                      = ((byte)'t') | ((byte)'n' << 8) | ((byte)'u' << 16) | ((byte)'m' << 24),
        TraditionalForms                    = ((byte)'t') | ((byte)'r' << 8) | ((byte)'a' << 16) | ((byte)'d' << 24),
        ThirdWidths                         = ((byte)'t') | ((byte)'w' << 8) | ((byte)'i' << 16) | ((byte)'d' << 24),
        Unicase                             = ((byte)'u') | ((byte)'n' << 8) | ((byte)'i' << 16) | ((byte)'c' << 24),
        VerticalWriting                     = ((byte)'v') | ((byte)'e' << 8) | ((byte)'r' << 16) | ((byte)'t' << 24),
        VerticalAlternatesAndRotation       = ((byte)'v') | ((byte)'r' << 8) | ((byte)'t' << 16) | ((byte)'2' << 24),
        SlashedZero                         = ((byte)'z') | ((byte)'e' << 8) | ((byte)'r' << 16) | ((byte)'o' << 24),
    }
}

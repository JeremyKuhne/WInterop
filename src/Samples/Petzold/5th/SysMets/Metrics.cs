// ------------------------
//    WInterop Framework
// ------------------------

// Copyright (c) Jeremy W. Kuhne. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

using System.Collections.Generic;
using WInterop.Windows;

public static class Metrics
{
    public static Dictionary<SystemMetric, string> SystemMetrics = new Dictionary<SystemMetric, string>
    {
        { SystemMetric.ScreenWidth, "Screen width in pixels" },
        { SystemMetric.ScreenHeight, "Screen height in pixels" },
        { SystemMetric.VerticalScrollWidth, "Vertical scroll width" },
        { SystemMetric.HorizontalScrollHeight, "Horizontal scroll height" },
        { SystemMetric.CaptionAreaHeight, "Caption bar height" },
        { SystemMetric.BorderWidth, "Window border width" },
        { SystemMetric.BorderHeight, "Window border height" },
        { SystemMetric.FixedFrameHeight, "Dialog window frame height" },
        { SystemMetric.FixedFrameWidth, "Dialog window frame width" },
        { SystemMetric.VerticalThumbHeight, "Vertical scroll thumb height" },
        { SystemMetric.HorizontalThumbWidth, "Horizontal scroll thumb width" },
        { SystemMetric.IconWidth, "Icon width" },
        { SystemMetric.IconHeight, "Icon height" },
        { SystemMetric.CursorWidth, "Cursor width" },
        { SystemMetric.CursorHeight, "Cursor height" },
        { SystemMetric.MenuHeight, "Menu bar height" },
        { SystemMetric.FullScreenWindowWidth, "Full screen client area width" },
        { SystemMetric.FullScreenWindowHeight, "Full screen client area height" },
        { SystemMetric.KanjiWindowHeight, "Kanji window height" },
        { SystemMetric.MousePresent, "Mouse present flag" },
        { SystemMetric.VerticalScrollArrowHeight, "Vertical scroll arrow height" },
        { SystemMetric.HorizontalScrollArrowWidth, "Horizontal scroll arrow width" },
        { SystemMetric.Debug, "Debug version flag" },
        { SystemMetric.SwapButton, "Mouse buttons swapped flag" },
        { SystemMetric.MinimumWidth, "Minimum window width" },
        { SystemMetric.MinimumHeight, "Minimum window height" },
        { SystemMetric.SizeWidth, "Min/Max/Close button width" },
        { SystemMetric.SizeHeight, "Min/Max/Close button height" },
        { SystemMetric.SizeFrameHeight, "Window sizing frame width" },
        { SystemMetric.SizeFrameWidth, "Window sizing frame height" },
        { SystemMetric.MinimumTrackingWidth, "Minimum window tracking width" },
        { SystemMetric.MinimumTrackingHeight, "Minimum window tracking height" },
        { SystemMetric.DoubleClickWidth, "Double click x tolerance" },
        { SystemMetric.DoubleClickHeight, "Double click y tolerance" },
        { SystemMetric.IconSpacingHeight, "Horizontal icon spacing" },
        { SystemMetric.IconSpacingWidth, "Vertical icon spacing" },
        { SystemMetric.MenuDropAlignment, "Left or right menu drop" },
        { SystemMetric.PenWindows, "Pen extensions installed" },
        { SystemMetric.DbcsEnabled, "Double-Byte Char Set enabled" },
        { SystemMetric.MouseButtonsCount, "Number of mouse buttons" },
        { SystemMetric.Secure, "Security present flag" },
        { SystemMetric.EdgeWidth, "3-D border width" },
        { SystemMetric.EdgeHeight, "3-D border height" },
        { SystemMetric.MinimumSpacingWidth, "Minimized window spacing width" },
        { SystemMetric.MinimumSpacingHeight, "Minimized window spacing height" },
        { SystemMetric.SmallIconWidth, "Small icon width" },
        { SystemMetric.SmallIconHeight, "Small icon height" },
        { SystemMetric.SmallCaptionHeight, "Small caption height" },
        { SystemMetric.SmallCaptionButtonWidth, "Small caption button width" },
        { SystemMetric.SmallCaptionButtonHeight, "Small caption button height" },
        { SystemMetric.MenuBarButtonWidth, "Menu bar button width" },
        { SystemMetric.MenuBarButtonHeight, "Menu bar button height" },
        { SystemMetric.Arrange, "How minimized windows arranged" },
        { SystemMetric.MinimizedWidth, "Minimized window width" },
        { SystemMetric.MinimizedHeight, "Minimized window height" },
        { SystemMetric.MaximumTrackingWidth, "Maximum draggable width" },
        { SystemMetric.MaximumTrackingHeight, "Maximum draggable height" },
        { SystemMetric.MaximizedWidth, "Width of maximized window" },
        { SystemMetric.MaximizedHeight, "Height of maximized window" },
        { SystemMetric.Network, "Network present flag" },
        { SystemMetric.CleanBoot, "How system was booted" },
        { SystemMetric.HorizontalDrag, "Avoid drag x tolerance" },
        { SystemMetric.VerticalDrag, "Avoid drag y tolerance" },
        { SystemMetric.ShowSounds, "Present sounds visually" },
        { SystemMetric.MenuCheckWidth, "Menu check-mark width" },
        { SystemMetric.MenuCheckHeight, "Menu check-mark height" },
        { SystemMetric.SlowMachine, "Slow processor flag" },
        { SystemMetric.MideastEnabled, "Hebrew and Arabic enabled flag" },
        { SystemMetric.MouseWheelPresent, "Mouse wheel present flag" },
        { SystemMetric.VirtualScreenLeft, "Virtual screen x origin" },
        { SystemMetric.VirtualScreenTop, "Virtual screen y origin" },
        { SystemMetric.VirtualScreenWidth, "Virtual screen width" },
        { SystemMetric.VirtualScreenHeight, "Virtual screen height" },
        { SystemMetric.MonitorsCount, "Number of monitors" },
        { SystemMetric.SameDisplayFormat, "Same color format flag" }
    };
}
